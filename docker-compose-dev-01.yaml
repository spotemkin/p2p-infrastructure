version: "3.9"
services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: always
    networks:
      - traefik
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./docker/traefik/provider.yml:/etc/traefik/provider.yml
      - ./.htpasswd:/etc/.htpasswd
      - ./data/traefik/acme:/etc/traefik/acme
      - ./data/traefik/log:/var/log/traefik
    command:
      - "--certificatesResolvers.letsEncrypt.acme.email=${EMAIL}"
    labels:
      - traefik.enable=true

      - traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DOMAIN}`)
      - traefik.http.routers.traefik.service=api@internal
      # - traefik.http.routers.traefik.middlewares=auth@file
      - traefik.http.routers.traefik.entryPoints=web
      # - traefik.http.routers.traefik.middlewares=redirect-to-https

      - traefik.http.routers.traefikSecure.rule=Host(`${TRAEFIK_DOMAIN}`)
      - traefik.http.routers.traefikSecure.service=api@internal
      # - traefik.http.routers.traefikSecure.middlewares=auth@file
      - traefik.http.routers.traefikSecure.entryPoints=webSecure
      - traefik.http.routers.traefikSecure.tls.certResolver=letsEncrypt

      # - traefik.http.routers.http_catchall.rule=HostRegexp(`{any:.+}`)
      # - traefik.http.routers.http_catchall.entrypoints=web
      # - traefik.http.routers.http_catchall.middlewares=https_redirect

      - traefik.http.middlewares.traefik-headers.headers.FrameDeny=true
      - traefik.http.middlewares.traefik-headers.headers.browserXssFilter=true
      - traefik.http.middlewares.traefik-headers.headers.contentTypeNosniff=true
      - traefik.http.middlewares.traefik-headers.headers.stsSeconds=315360000
      - traefik.http.middlewares.traefik-headers.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.traefik-headers.headers.stsPreload=true

      - traefik.http.middlewares.https-redirect.redirectScheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectScheme.permanent=true

      - traefik.http.middlewares.httpauth.basicauth.usersfile=/etc/.htpasswd

      - traefik.http.middlewares.compress.compress=true

      - traefik.http.routers.traefik.middlewares=traefik-headers@docker,https-redirect@docker,compress@docker,httpauth@docker
      - traefik.http.routers.traefikSecure.middlewares=traefik-headers@docker,https-redirect@docker,compress@docker,httpauth@docker

      - traefik.http.routers.traefikPrometheus.rule=Host(`${METRICS_DOMAIN}`)
      - traefik.http.routers.traefikPrometheus.service=prometheus@internal
      - traefik.http.routers.traefikPrometheus.entryPoints=web

      - traefik.http.routers.traefikPrometheusSecure.rule=Host(`${METRICS_DOMAIN}`)
      - traefik.http.routers.traefikPrometheusSecure.service=prometheus@internal
      - traefik.http.routers.traefikPrometheusSecure.middlewares=auth@file
      - traefik.http.routers.traefikPrometheusSecure.entryPoints=webSecure
      - traefik.http.routers.traefikPrometheusSecure.tls.certResolver=letsEncrypt

      - traefik.http.middlewares.traefikPrometheus-headers.headers.FrameDeny=true
      - traefik.http.middlewares.traefikPrometheus-headers.headers.browserXssFilter=true
      - traefik.http.middlewares.traefikPrometheus-headers.headers.contentTypeNosniff=true
      - traefik.http.middlewares.traefikPrometheus-headers.headers.stsSeconds=315360000
      - traefik.http.middlewares.traefikPrometheus-headers.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.traefikPrometheus-headers.headers.stsPreload=true

      - traefik.http.routers.traefikPrometheus.middlewares=traefikPrometheus-headers@docker,https-redirect@docker,compress@docker,httpauth@docker
      - traefik.http.routers.traefikPrometheusSecure.middlewares=traefikPrometheus-headers@docker,https-redirect@docker,compress@docker,httpauth@docker

      - traefik.http.services.traefik.loadbalancer.server.port=8082
  prometheus:
    image: prom/prometheus:v2.40.2
    container_name: prometheus
    restart: always
    user: root
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - traefik
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./data/prometheus:/prometheus
    labels:
      - traefik.enable=true

      - traefik.http.routers.prometheus.rule=Host(`${PROMETHEUS_DOMAIN}`)
      - traefik.http.routers.prometheus.service=prometheus
      - traefik.http.routers.prometheus.middlewares=auth@file
      - traefik.http.routers.prometheus.entryPoints=web

      - traefik.http.routers.prometheusSecure.rule=Host(`${PROMETHEUS_DOMAIN}`)
      - traefik.http.routers.prometheusSecure.service=prometheus
      - traefik.http.routers.prometheusSecure.middlewares=auth@file
      - traefik.http.routers.prometheusSecure.entryPoints=webSecure
      - traefik.http.routers.prometheusSecure.tls.certResolver=letsEncrypt

      - traefik.http.middlewares.prometheus-headers.headers.FrameDeny=true
      - traefik.http.middlewares.prometheus-headers.headers.browserXssFilter=true
      - traefik.http.middlewares.prometheus-headers.headers.contentTypeNosniff=true
      - traefik.http.middlewares.prometheus-headers.headers.stsSeconds=315360000
      - traefik.http.middlewares.prometheus-headers.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.prometheus-headers.headers.stsPreload=true

      - traefik.http.middlewares.https-redirect.redirectScheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectScheme.permanent=true

      - traefik.http.middlewares.compress.compress=true

      - traefik.http.routers.prometheus.middlewares=prometheus-headers@docker,https-redirect@docker,compress@docker,httpauth@docker
      - traefik.http.routers.prometheusSecure.middlewares=prometheus-headers@docker,https-redirect@docker,compress@docker,httpauth@docker

      - traefik.http.routers.prometheusMetrics.rule=Host(`${PROMETHEUS_DOMAIN}`) && PathPrefix(`/metrics`)
      - traefik.http.routers.prometheusMetrics.service=prometheus
      - traefik.http.routers.prometheusMetrics.entryPoints=web

      - traefik.http.routers.prometheusMetricsSecure.rule=Host(`${PROMETHEUS_DOMAIN}`) && PathPrefix(`/metrics`)
      - traefik.http.routers.prometheusMetricsSecure.service=prometheus
      - traefik.http.routers.prometheusMetricsSecure.entryPoints=webSecure
      - traefik.http.routers.prometheusMetricsSecure.tls.certResolver=letsEncrypt

      - traefik.http.services.prometheus.loadbalancer.server.port=9090
  whoami:
    image: traefik/whoami:v1.8.7
    command:
       # It tells whoami to start listening on 3380 instead of 80
       - --port=3380
    container_name: whoami
    restart: always
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.rule=Host(`${WHOAMI_DOMAIN}`)
      - traefik.http.routers.whoami.service=whoami
      - traefik.http.routers.whoami.entryPoints=web

      - traefik.http.routers.whoamiSecure.rule=Host(`${WHOAMI_DOMAIN}`)
      - traefik.http.routers.whoamiSecure.service=whoami
      - traefik.http.routers.whoamiSecure.middlewares=auth@file
      - traefik.http.routers.whoamiSecure.entryPoints=webSecure
      - traefik.http.routers.whoamiSecure.tls.certResolver=letsEncrypt

      - traefik.http.middlewares.whoami-headers.headers.FrameDeny=true
      - traefik.http.middlewares.whoami-headers.headers.browserXssFilter=true
      - traefik.http.middlewares.whoami-headers.headers.contentTypeNosniff=true
      - traefik.http.middlewares.whoami-headers.headers.stsSeconds=315360000
      - traefik.http.middlewares.whoami-headers.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.whoami-headers.headers.stsPreload=true

      - traefik.http.middlewares.https-redirect.redirectScheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectScheme.permanent=true

      - traefik.http.middlewares.compress.compress=true

      - traefik.http.routers.whoami.middlewares=whoami-headers@docker,https-redirect@docker,compress@docker
      - traefik.http.routers.whoamiSecure.middlewares=whoami-headers@docker,https-redirect@docker,compress@docker

      - traefik.http.services.whoami.loadbalancer.server.port=3380


  node_exporter:
    image: prom/node-exporter:v1.3.1
    container_name: node_exporter
    restart: always
    networks:
      - traefik
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    labels:
      - traefik.enable=true
      - traefik.http.routers.nodeExporter.rule=Host(`${NODE_DOMAIN}`)
      - traefik.http.routers.nodeExporter.service=nodeExporter
      - traefik.http.routers.nodeExporter.entryPoints=web

      - traefik.http.routers.nodeExporterSecure.rule=Host(`${NODE_DOMAIN}`)
      - traefik.http.routers.nodeExporterSecure.service=nodeExporter
      - traefik.http.routers.nodeExporterSecure.middlewares=auth@file
      - traefik.http.routers.nodeExporterSecure.entryPoints=webSecure
      - traefik.http.routers.nodeExporterSecure.tls.certResolver=letsEncrypt

      - traefik.http.middlewares.nodeExporter-headers.headers.FrameDeny=true
      - traefik.http.middlewares.nodeExporter-headers.headers.browserXssFilter=true
      - traefik.http.middlewares.nodeExporter-headers.headers.contentTypeNosniff=true
      - traefik.http.middlewares.nodeExporter-headers.headers.stsSeconds=315360000
      - traefik.http.middlewares.nodeExporter-headers.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.nodeExporter-headers.headers.stsPreload=true

      - traefik.http.middlewares.https-redirect.redirectScheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectScheme.permanent=true

      - traefik.http.middlewares.compress.compress=true

      - traefik.http.routers.nodeExporter.middlewares=nodeExporter-headers@docker,https-redirect@docker,compress@docker,httpauth@docker
      - traefik.http.routers.nodeExporterSecure.middlewares=nodeExporter-headers@docker,https-redirect@docker,compress@docker,httpauth@docker

      - traefik.http.services.nodeExporter.loadbalancer.server.port=9100

  pic_client:
    image: nginx:latest
    container_name: pic_client
    restart: always
    volumes:
      - /data/pics/sys/nginx-data/:/data/static:ro
      - /data/pics/sys/nginx-log/:/var/log/nginx
    command:
      - /bin/sh
      - -c
      - |
        echo "server {
          listen 3381;
          server_name localhost;

          access_log /var/log/nginx/access.log;
          error_log /var/log/nginx/error.log;

          location / {
            root /data/static;
            index  index.html index.htm;
            etag on;
            if_modified_since before;
            expires 30d;
            add_header Cache-Control 'public, max-age=2592000';
          }
        }" > /etc/nginx/conf.d/default.conf && nginx -g "daemon off;"
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.picclient-service.rule=Host(`${PIC_DOMAIN}`)
      - traefik.http.routers.picclient-service.service.picclient-service
      - traefik.http.routers.picclient-service.entrypoints=web

      - traefik.http.routers.picclient-serviceSecure.rule=Host(`${PIC_DOMAIN}`)
      - traefik.http.routers.picclient-serviceSecure.service.picclient-service
      - traefik.http.routers.picclient-serviceSecure.entrypoints=webSecure
      - traefik.http.routers.picclient-serviceSecure.tls.certresolver=letsEncrypt

      - traefik.http.middlewares.picclient-header.headers.FrameDeny=true
      - traefik.http.middlewares.picclient-header.headers.browserXssFilter=true
      - traefik.http.middlewares.picclient-header.headers.contentTypeNosniff=true
      - traefik.http.middlewares.picclient-header.headers.stsSeconds=315360000
      - traefik.http.middlewares.picclient-header.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.picclient-header.headers.stsPreload=true

      - traefik.http.middlewares.https-redirect.redirectScheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectScheme.permanent=true

      - traefik.http.middlewares.compress.compress=true

      - traefik.http.routers.picclient-service.middlewares.picclient-header@docker,https-redirect@docker,compress@docker
      - traefik.http.routers.picclient-serviceSecure.middlewares.picclient-header@docker,https-redirect@docker,compress@docker

      - traefik.http.services.picclient.loadbalancer.server.port=3381

networks:
  traefik:
    external: true
    name: traefik